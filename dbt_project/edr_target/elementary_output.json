{"creation_time": "2023-12-27T08:24:28+00:00", "days_back": 7, "models": {"model.dbt_project.my_first_dbt_model": {"name": "my_first_dbt_model", "unique_id": "model.dbt_project.my_first_dbt_model", "owners": [], "tags": [], "package_name": "dbt_project", "description": "A starter dbt model", "full_path": "models/example/my_first_dbt_model.sql", "meta": {}, "materialization": "table", "database_name": "dft", "schema_name": "public", "table_name": "my_first_dbt_model", "patch_path": "dbt_project://models\\example\\schema.yml", "model_name": "my_first_dbt_model", "normalized_full_path": "dbt_project/models/example/my_first_dbt_model.sql", "fqn": "dft.public.my_first_dbt_model", "artifact_type": "model"}, "model.dbt_project.my_second_dbt_model": {"name": "my_second_dbt_model", "unique_id": "model.dbt_project.my_second_dbt_model", "owners": [], "tags": [], "package_name": "dbt_project", "description": "A starter dbt model", "full_path": "models/example/my_second_dbt_model.sql", "meta": {}, "materialization": "view", "database_name": "dft", "schema_name": "public", "table_name": "my_second_dbt_model", "patch_path": "dbt_project://models\\example\\schema.yml", "model_name": "my_second_dbt_model", "normalized_full_path": "dbt_project/models/example/my_second_dbt_model.sql", "fqn": "dft.public.my_second_dbt_model", "artifact_type": "model"}, "model.dbt_project.src_phone": {"name": "src_phone", "unique_id": "model.dbt_project.src_phone", "owners": [], "tags": [], "package_name": "dbt_project", "description": "", "full_path": "models/source/src_phone.sql", "meta": {}, "materialization": "table", "database_name": "dft", "schema_name": "public", "table_name": "src_phone", "patch_path": "dbt_project://models\\source\\source.yml", "model_name": "src_phone", "normalized_full_path": "dbt_project/models/source/src_phone.sql", "fqn": "dft.public.src_phone", "artifact_type": "model"}, "model.dbt_project.stg_phone": {"name": "stg_phone", "unique_id": "model.dbt_project.stg_phone", "owners": [], "tags": [], "package_name": "dbt_project", "description": "", "full_path": "models/staging/stg_phone.sql", "meta": {}, "materialization": "view", "database_name": "dft", "schema_name": "public", "table_name": "stg_phone", "patch_path": null, "model_name": "stg_phone", "normalized_full_path": "dbt_project/models/staging/stg_phone.sql", "fqn": "dft.public.stg_phone", "artifact_type": "model"}}, "groups": {"dbt": {"dbt_project": {"models": {"example": {"__files__": [{"node_id": "model.dbt_project.my_first_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_project.my_second_dbt_model", "resource_type": "model"}]}, "source": {"__files__": [{"node_id": "model.dbt_project.src_phone", "resource_type": "model"}]}, "staging": {"__files__": [{"node_id": "model.dbt_project.stg_phone", "resource_type": "model"}]}}}}, "tags": {"No tags": [{"node_id": "model.dbt_project.my_first_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_project.my_second_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_project.src_phone", "resource_type": "model"}, {"node_id": "model.dbt_project.stg_phone", "resource_type": "model"}]}, "owners": {"No owners": [{"node_id": "model.dbt_project.my_first_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_project.my_second_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_project.src_phone", "resource_type": "model"}, {"node_id": "model.dbt_project.stg_phone", "resource_type": "model"}]}}, "invocation": {"invocation_id": null, "detected_at": null, "command": null, "selected": null, "full_refresh": null, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}, "test_results": {"model.dbt_project.my_first_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_project.not_null_my_first_dbt_model_id.5fb22c2710", "elementary_unique_id": "test.dbt_project.not_null_my_first_dbt_model_id.5fb22c2710.id.generic", "database_name": "dft", "schema_name": "public", "table_name": "my_first_dbt_model", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "fail", "model_unique_id": "model.dbt_project.my_first_dbt_model", "table_unique_id": "dft.public.my_first_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom \"dft\".\"public\".\"my_first_dbt_model\"\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": "Got 1 result, configured to fail if != 0", "result_query": "select id\nfrom \"dft\".\"public\".\"my_first_dbt_model\"\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": [{"id": null}], "error_message": "Got 1 result, configured to fail if != 0", "failed_rows_count": 1}}, {"metadata": {"test_unique_id": "test.dbt_project.unique_my_first_dbt_model_id.16e066b321", "elementary_unique_id": "test.dbt_project.unique_my_first_dbt_model_id.16e066b321.id.generic", "database_name": "dft", "schema_name": "public", "table_name": "my_first_dbt_model", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.my_first_dbt_model", "table_unique_id": "dft.public.my_first_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"my_first_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"my_first_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.dbt_project.src_phone": [{"metadata": {"test_unique_id": "test.dbt_project.accepted_values_src_phone_smoker__True__yes__no.50da914674", "elementary_unique_id": "test.dbt_project.accepted_values_src_phone_smoker__True__yes__no.50da914674.smoker.generic", "database_name": "dft", "schema_name": "public", "table_name": "src_phone", "column_name": "smoker", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.src_phone", "table_unique_id": "dft.public.src_phone", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        smoker as value_field,\n        count(*) as n_records\n\n    from \"dft\".\"public\".\"src_phone\"\n    group by smoker\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'yes','no'\n)", "test_params": {"values": ["yes", "no"], "quote": true, "column_name": "smoker", "model": "{{ get_where_subquery(ref('src_phone')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        smoker as value_field,\n        count(*) as n_records\n\n    from \"dft\".\"public\".\"src_phone\"\n    group by smoker\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'yes','no'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["yes", "no"], "quote": true, "column_name": "smoker", "model": "{{ get_where_subquery(ref('src_phone')) }}"}}}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.dbt_project.dbt_expectations_expect_column_value_lengths_to_equal_src_phone_phone_number__phone_number_is_not_null__9.9b8f43cb3e", "elementary_unique_id": "test.dbt_project.dbt_expectations_expect_column_value_lengths_to_equal_src_phone_phone_number__phone_number_is_not_null__9.9b8f43cb3e.phone_number.expectation", "database_name": "dft", "schema_name": "public", "table_name": "src_phone", "column_name": "phone_number", "test_name": "expect_column_value_lengths_to_equal", "test_display_name": "Expect Column Value Lengths To Equal", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "fail", "model_unique_id": "model.dbt_project.src_phone", "table_unique_id": "dft.public.src_phone", "test_type": "dbt_test", "test_sub_type": "expectation", "test_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        phone_number\n    ) = 9 as expression\n\n\n    from \"dft\".\"public\".\"src_phone\"\n    where\n        phone_number is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors", "test_params": {"value": 9, "row_condition": "phone_number is not null", "column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}, "test_created_at": null, "description": "Expect column entries to be strings with length equal to the provided value.", "result": {"result_description": "Got 137 results, configured to fail if != 0", "result_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        phone_number\n    ) = 9 as expression\n\n\n    from \"dft\".\"public\".\"src_phone\"\n    where\n        phone_number is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "expect_column_value_lengths_to_equal", "test_params": {"value": 9, "row_condition": "phone_number is not null", "column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}}}, "test_results": {"display_name": "expect_column_value_lengths_to_equal", "results_sample": [{"expression": false}, {"expression": false}, {"expression": false}, {"expression": false}, {"expression": false}], "error_message": "Got 137 results, configured to fail if != 0", "failed_rows_count": 137}}, {"metadata": {"test_unique_id": "test.dbt_project.not_null_src_phone_phone_number.04f7286b13", "elementary_unique_id": "test.dbt_project.not_null_src_phone_phone_number.04f7286b13.phone_number.generic", "database_name": "dft", "schema_name": "public", "table_name": "src_phone", "column_name": "phone_number", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.src_phone", "table_unique_id": "dft.public.src_phone", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select phone_number\nfrom \"dft\".\"public\".\"src_phone\"\nwhere phone_number is null", "test_params": {"column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select phone_number\nfrom \"dft\".\"public\".\"src_phone\"\nwhere phone_number is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.dbt_project.unique_src_phone_phone_number.e73d69e13e", "elementary_unique_id": "test.dbt_project.unique_src_phone_phone_number.e73d69e13e.phone_number.generic", "database_name": "dft", "schema_name": "public", "table_name": "src_phone", "column_name": "phone_number", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "fail", "model_unique_id": "model.dbt_project.src_phone", "table_unique_id": "dft.public.src_phone", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    phone_number as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"src_phone\"\nwhere phone_number is not null\ngroup by phone_number\nhaving count(*) > 1", "test_params": {"column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Got 1 result, configured to fail if != 0", "result_query": "select\n    phone_number as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"src_phone\"\nwhere phone_number is not null\ngroup by phone_number\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": [{"unique_field": "886665454", "n_records": 23}], "error_message": "Got 1 result, configured to fail if != 0", "failed_rows_count": 1}}], "model.dbt_project.my_second_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_project.not_null_my_second_dbt_model_id.151b76d778", "elementary_unique_id": "test.dbt_project.not_null_my_second_dbt_model_id.151b76d778.id.generic", "database_name": "dft", "schema_name": "public", "table_name": "my_second_dbt_model", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.my_second_dbt_model", "table_unique_id": "dft.public.my_second_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom \"dft\".\"public\".\"my_second_dbt_model\"\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom \"dft\".\"public\".\"my_second_dbt_model\"\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.dbt_project.unique_my_second_dbt_model_id.57a0f8c493", "elementary_unique_id": "test.dbt_project.unique_my_second_dbt_model_id.57a0f8c493.id.generic", "database_name": "dft", "schema_name": "public", "table_name": "my_second_dbt_model", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.my_second_dbt_model", "table_unique_id": "dft.public.my_second_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"my_second_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"my_second_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}]}, "test_results_totals": {"model.dbt_project.my_first_dbt_model": {"errors": 0, "warnings": 0, "passed": 1, "failures": 1}, "model.dbt_project.src_phone": {"errors": 0, "warnings": 0, "passed": 2, "failures": 2}, "model.dbt_project.my_second_dbt_model": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}}, "test_runs": {"model.dbt_project.my_first_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_project.not_null_my_first_dbt_model_id.5fb22c2710", "elementary_unique_id": "test.dbt_project.not_null_my_first_dbt_model_id.5fb22c2710.id.generic", "database_name": "dft", "schema_name": "public", "table_name": "my_first_dbt_model", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "fail", "model_unique_id": "model.dbt_project.my_first_dbt_model", "table_unique_id": "dft.public.my_first_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom \"dft\".\"public\".\"my_first_dbt_model\"\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": "Got 1 result, configured to fail if != 0", "result_query": "select id\nfrom \"dft\".\"public\".\"my_first_dbt_model\"\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}}}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 0, "warnings": 0, "passed": 0, "failures": 2}, "invocations": [{"affected_rows": 1, "time_utc": "2023-12-27T07:48:37+00:00", "id": "21fc8077-971b-4c25-b902-22a10600603b", "status": "fail"}, {"affected_rows": 1, "time_utc": "2023-12-27T08:13:28+00:00", "id": "7c561c6c-93b1-4849-ab1b-53c80b0b79a5", "status": "fail"}], "description": "There were 2 failures, no errors and no warnings on the last 2 test runs."}}, {"metadata": {"test_unique_id": "test.dbt_project.unique_my_first_dbt_model_id.16e066b321", "elementary_unique_id": "test.dbt_project.unique_my_first_dbt_model_id.16e066b321.id.generic", "database_name": "dft", "schema_name": "public", "table_name": "my_first_dbt_model", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.my_first_dbt_model", "table_unique_id": "dft.public.my_first_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"my_first_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"my_first_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-12-27T07:48:38+00:00", "id": "21fc8077-971b-4c25-b902-22a10600603b", "status": "pass"}, {"affected_rows": null, "time_utc": "2023-12-27T08:13:28+00:00", "id": "7c561c6c-93b1-4849-ab1b-53c80b0b79a5", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 2 test runs."}}], "model.dbt_project.src_phone": [{"metadata": {"test_unique_id": "test.dbt_project.accepted_values_src_phone_smoker__True__yes__no.50da914674", "elementary_unique_id": "test.dbt_project.accepted_values_src_phone_smoker__True__yes__no.50da914674.smoker.generic", "database_name": "dft", "schema_name": "public", "table_name": "src_phone", "column_name": "smoker", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.src_phone", "table_unique_id": "dft.public.src_phone", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        smoker as value_field,\n        count(*) as n_records\n\n    from \"dft\".\"public\".\"src_phone\"\n    group by smoker\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'yes','no'\n)", "test_params": {"values": ["yes", "no"], "quote": true, "column_name": "smoker", "model": "{{ get_where_subquery(ref('src_phone')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        smoker as value_field,\n        count(*) as n_records\n\n    from \"dft\".\"public\".\"src_phone\"\n    group by smoker\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'yes','no'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["yes", "no"], "quote": true, "column_name": "smoker", "model": "{{ get_where_subquery(ref('src_phone')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-12-27T07:48:38+00:00", "id": "21fc8077-971b-4c25-b902-22a10600603b", "status": "pass"}, {"affected_rows": null, "time_utc": "2023-12-27T08:13:28+00:00", "id": "7c561c6c-93b1-4849-ab1b-53c80b0b79a5", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 2 test runs."}}, {"metadata": {"test_unique_id": "test.dbt_project.dbt_expectations_expect_column_value_lengths_to_equal_src_phone_phone_number__phone_number_is_not_null__9.9b8f43cb3e", "elementary_unique_id": "test.dbt_project.dbt_expectations_expect_column_value_lengths_to_equal_src_phone_phone_number__phone_number_is_not_null__9.9b8f43cb3e.phone_number.expectation", "database_name": "dft", "schema_name": "public", "table_name": "src_phone", "column_name": "phone_number", "test_name": "expect_column_value_lengths_to_equal", "test_display_name": "Expect Column Value Lengths To Equal", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "fail", "model_unique_id": "model.dbt_project.src_phone", "table_unique_id": "dft.public.src_phone", "test_type": "dbt_test", "test_sub_type": "expectation", "test_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        phone_number\n    ) = 9 as expression\n\n\n    from \"dft\".\"public\".\"src_phone\"\n    where\n        phone_number is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors", "test_params": {"value": 9, "row_condition": "phone_number is not null", "column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}, "test_created_at": null, "description": "Expect column entries to be strings with length equal to the provided value.", "result": {"result_description": "Got 137 results, configured to fail if != 0", "result_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        phone_number\n    ) = 9 as expression\n\n\n    from \"dft\".\"public\".\"src_phone\"\n    where\n        phone_number is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "expect_column_value_lengths_to_equal", "test_params": {"value": 9, "row_condition": "phone_number is not null", "column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}}}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 0, "warnings": 0, "passed": 0, "failures": 2}, "invocations": [{"affected_rows": 137, "time_utc": "2023-12-27T07:48:38+00:00", "id": "21fc8077-971b-4c25-b902-22a10600603b", "status": "fail"}, {"affected_rows": 137, "time_utc": "2023-12-27T08:13:28+00:00", "id": "7c561c6c-93b1-4849-ab1b-53c80b0b79a5", "status": "fail"}], "description": "There were 2 failures, no errors and no warnings on the last 2 test runs."}}, {"metadata": {"test_unique_id": "test.dbt_project.not_null_src_phone_phone_number.04f7286b13", "elementary_unique_id": "test.dbt_project.not_null_src_phone_phone_number.04f7286b13.phone_number.generic", "database_name": "dft", "schema_name": "public", "table_name": "src_phone", "column_name": "phone_number", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.src_phone", "table_unique_id": "dft.public.src_phone", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select phone_number\nfrom \"dft\".\"public\".\"src_phone\"\nwhere phone_number is null", "test_params": {"column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select phone_number\nfrom \"dft\".\"public\".\"src_phone\"\nwhere phone_number is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-12-27T07:48:38+00:00", "id": "21fc8077-971b-4c25-b902-22a10600603b", "status": "pass"}, {"affected_rows": null, "time_utc": "2023-12-27T08:13:28+00:00", "id": "7c561c6c-93b1-4849-ab1b-53c80b0b79a5", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 2 test runs."}}, {"metadata": {"test_unique_id": "test.dbt_project.unique_src_phone_phone_number.e73d69e13e", "elementary_unique_id": "test.dbt_project.unique_src_phone_phone_number.e73d69e13e.phone_number.generic", "database_name": "dft", "schema_name": "public", "table_name": "src_phone", "column_name": "phone_number", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "fail", "model_unique_id": "model.dbt_project.src_phone", "table_unique_id": "dft.public.src_phone", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    phone_number as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"src_phone\"\nwhere phone_number is not null\ngroup by phone_number\nhaving count(*) > 1", "test_params": {"column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Got 1 result, configured to fail if != 0", "result_query": "select\n    phone_number as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"src_phone\"\nwhere phone_number is not null\ngroup by phone_number\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "phone_number", "model": "{{ get_where_subquery(ref('src_phone')) }}"}}}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 0, "warnings": 0, "passed": 0, "failures": 2}, "invocations": [{"affected_rows": 1, "time_utc": "2023-12-27T07:48:38+00:00", "id": "21fc8077-971b-4c25-b902-22a10600603b", "status": "fail"}, {"affected_rows": 1, "time_utc": "2023-12-27T08:13:28+00:00", "id": "7c561c6c-93b1-4849-ab1b-53c80b0b79a5", "status": "fail"}], "description": "There were 2 failures, no errors and no warnings on the last 2 test runs."}}], "model.dbt_project.my_second_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_project.not_null_my_second_dbt_model_id.151b76d778", "elementary_unique_id": "test.dbt_project.not_null_my_second_dbt_model_id.151b76d778.id.generic", "database_name": "dft", "schema_name": "public", "table_name": "my_second_dbt_model", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.my_second_dbt_model", "table_unique_id": "dft.public.my_second_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom \"dft\".\"public\".\"my_second_dbt_model\"\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom \"dft\".\"public\".\"my_second_dbt_model\"\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-12-27T07:48:37+00:00", "id": "21fc8077-971b-4c25-b902-22a10600603b", "status": "pass"}, {"affected_rows": null, "time_utc": "2023-12-27T08:13:28+00:00", "id": "7c561c6c-93b1-4849-ab1b-53c80b0b79a5", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 2 test runs."}}, {"metadata": {"test_unique_id": "test.dbt_project.unique_my_second_dbt_model_id.57a0f8c493", "elementary_unique_id": "test.dbt_project.unique_my_second_dbt_model_id.57a0f8c493.id.generic", "database_name": "dft", "schema_name": "public", "table_name": "my_second_dbt_model", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-12-27T15:13:28+07:00", "latest_run_time_utc": "2023-12-27T08:13:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_project.my_second_dbt_model", "table_unique_id": "dft.public.my_second_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"my_second_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"dft\".\"public\".\"my_second_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-12-27T07:48:38+00:00", "id": "21fc8077-971b-4c25-b902-22a10600603b", "status": "pass"}, {"affected_rows": null, "time_utc": "2023-12-27T08:13:28+00:00", "id": "7c561c6c-93b1-4849-ab1b-53c80b0b79a5", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 2 test runs."}}]}, "test_runs_totals": {"model.dbt_project.my_first_dbt_model": {"errors": 0, "warnings": 0, "passed": 2, "failures": 2}, "model.dbt_project.src_phone": {"errors": 0, "warnings": 0, "passed": 4, "failures": 4}, "model.dbt_project.my_second_dbt_model": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}}, "coverages": {"model.dbt_project.src_phone": {"table_tests": 0, "column_tests": 4}, "model.dbt_project.my_first_dbt_model": {"table_tests": 0, "column_tests": 2}, "model.dbt_project.my_second_dbt_model": {"table_tests": 0, "column_tests": 2}}, "model_runs": [{"unique_id": "model.dbt_project.my_first_dbt_model", "schema": "public", "name": "my_first_dbt_model", "status": "success", "last_exec_time": 1.5, "median_exec_time": 1.5, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "last_generated_at": "2023-12-27T08:22:42+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 3}, "runs": [{"id": "b944c763-3974-4826-a751-f8ffeb087032", "time_utc": "2023-12-27T07:48:23+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 4.9}, {"id": "14e39731-e396-4e24-af2a-24e44845a503", "time_utc": "2023-12-27T08:13:18+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.1}, {"id": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "time_utc": "2023-12-27T08:22:42+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.5}]}, {"unique_id": "model.dbt_project.src_phone", "schema": "public", "name": "src_phone", "status": "success", "last_exec_time": 1.5, "median_exec_time": 1.5, "compiled_code": "SELECT *\r\nFROM public.insurance", "last_generated_at": "2023-12-27T08:22:42+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 3}, "runs": [{"id": "b944c763-3974-4826-a751-f8ffeb087032", "time_utc": "2023-12-27T07:48:23+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 4.9}, {"id": "14e39731-e396-4e24-af2a-24e44845a503", "time_utc": "2023-12-27T08:13:18+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.2}, {"id": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "time_utc": "2023-12-27T08:22:42+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.5}]}, {"unique_id": "model.dbt_project.my_second_dbt_model", "schema": "public", "name": "my_second_dbt_model", "status": "success", "last_exec_time": 0.8, "median_exec_time": 0.8, "compiled_code": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"dft\".\"public\".\"my_first_dbt_model\"\nwhere id = 1", "last_generated_at": "2023-12-27T08:22:42+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 3}, "runs": [{"id": "b944c763-3974-4826-a751-f8ffeb087032", "time_utc": "2023-12-27T07:48:23+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.9}, {"id": "14e39731-e396-4e24-af2a-24e44845a503", "time_utc": "2023-12-27T08:13:18+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.6}, {"id": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "time_utc": "2023-12-27T08:22:42+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.8}]}, {"unique_id": "model.dbt_project.stg_phone", "schema": "public", "name": "stg_phone", "status": "success", "last_exec_time": 1.1, "median_exec_time": 1.0, "compiled_code": "SELECT\nid,\nage,\nsex,\nbmi,\nchildren,\nsmoker,\nregion,\ncharges,\nconcat('84', phone_number) as sdt\nFROM \"dft\".\"public\".\"src_phone\"", "last_generated_at": "2023-12-27T08:22:42+00:00", "exec_time_change_rate": 10.000000000000009, "totals": {"errors": 0, "success": 3}, "runs": [{"id": "b944c763-3974-4826-a751-f8ffeb087032", "time_utc": "2023-12-27T07:48:23+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.9}, {"id": "14e39731-e396-4e24-af2a-24e44845a503", "time_utc": "2023-12-27T08:13:18+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.0}, {"id": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "time_utc": "2023-12-27T08:22:42+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.1}]}], "model_runs_totals": {"model.dbt_project.my_first_dbt_model": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.dbt_project.src_phone": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.dbt_project.my_second_dbt_model": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.dbt_project.stg_phone": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}}, "filters": {"test_results": [{"name": "failures", "display_name": "Failures", "model_unique_ids": ["model.dbt_project.my_first_dbt_model", "model.dbt_project.src_phone"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.dbt_project.my_first_dbt_model", "model.dbt_project.src_phone", "model.dbt_project.my_second_dbt_model"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["model.dbt_project.stg_phone"]}], "test_runs": [{"name": "failures", "display_name": "Failures", "model_unique_ids": ["model.dbt_project.my_first_dbt_model", "model.dbt_project.src_phone"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.dbt_project.my_first_dbt_model", "model.dbt_project.src_phone", "model.dbt_project.my_second_dbt_model"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["model.dbt_project.stg_phone"]}], "model_runs": [{"name": "success", "display_name": "Successful Runs", "model_unique_ids": ["model.dbt_project.my_first_dbt_model", "model.dbt_project.src_phone", "model.dbt_project.my_second_dbt_model", "model.dbt_project.stg_phone"]}]}, "lineage": {"nodes": [{"id": "model.dbt_project.my_first_dbt_model", "type": "model"}, {"id": "model.dbt_project.my_second_dbt_model", "type": "model"}, {"id": "model.dbt_project.src_phone", "type": "model"}, {"id": "model.dbt_project.stg_phone", "type": "model"}], "edges": [["model.dbt_project.my_second_dbt_model", "model.dbt_project.my_first_dbt_model"], ["model.dbt_project.stg_phone", "model.dbt_project.src_phone"]]}, "invocations": [{"invocation_id": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "detected_at": null, "command": "run", "selected": "", "full_refresh": false, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}], "resources_latest_invocation": {"model.dbt_project.my_first_dbt_model": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.dbt_project.my_second_dbt_model": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.dbt_project.src_phone": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.dbt_project.stg_phone": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.alerts_anomaly_detection": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.alerts_dbt_models": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.alerts_dbt_source_freshness": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.alerts_dbt_tests": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.alerts_schema_changes": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.anomaly_threshold_sensitivity": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.data_monitoring_metrics": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_artifacts_hashes": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_columns": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_exposures": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_invocations": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_metrics": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_models": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_run_results": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_seeds": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_snapshots": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_source_freshness_results": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_sources": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.dbt_tests": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.elementary_test_results": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.enriched_columns": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.information_schema_columns": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.job_run_results": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.metadata": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.metrics_anomaly_score": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.model_run_results": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.monitors_runs": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.schema_columns_snapshot": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.snapshot_run_results": "f1393c39-1ff1-4a81-a493-69ab592feeb7", "model.elementary.test_result_rows": "f1393c39-1ff1-4a81-a493-69ab592feeb7"}, "invocations_job_identification": {}, "env": {"project_name": "dbt_project", "env": "dev", "warehouse_type": "postgres"}, "tracking": {"posthog_api_key": "phc_56XBEzZmh02mGkadqLiYW51eECyYKWPyecVwkGdGUfg", "report_generator_anonymous_user_id": "46bc49ff-8768-451f-b7e2-d68aa846d828", "anonymous_warehouse_id": "eb2ab4dcad5bfa9908be7f29da14aa81d0f84e8a3cf9396deb477171cd7ca60e"}}